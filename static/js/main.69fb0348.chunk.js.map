{"version":3,"sources":["components/Menu/styles/menu.module.css","configuration.ts","utils/useEditor.ts","components/Editor/index.tsx","components/Menu/index.tsx","utils/useInterval.ts","utils/generateNumber.ts","utils/generateColor.ts","components/Wrapper/index.tsx","App.tsx","index.tsx","components/Wrapper/styles/wrapper.module.css","components/Editor/styles/editor.module.css"],"names":["module","exports","timeRange","colorRange","min","max","constate","useState","text","setText","previewEnabled","setPreviewEnabled","useEffect","storedValue","localStorage","getItem","length","setItem","toggleMode","EditorState","useEditorContext","Editor","editorStyles","classNames","styles","inner","editor","previewStyles","preview","className","container","wrapper","value","onChange","e","target","source","Menu","menuOpen","setMenuOpen","desktopStyles","desktopContainer","mobileStyles","mobileContainer","menuVisible","menuContent","heading","labelContainer","onClick","preventDefault","enabled","label","labelActive","getLabelStyles","fileDownload","menuIcon","useInterval","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","generateNumber","Math","floor","random","generateColor","Wrapper","children","Date","now","nextTransition","setNextTransition","transitionPending","setTransitionPending","currentColor","setCurrentColor","nextColor","setNextColor","prevColor","map","color","index","nextValue","isEqual","style","backgroundColor","join","App","WebFont","load","google","families","ReactDOM","render","document","getElementById"],"mappings":"6EACAA,EAAOC,QAAU,CAAC,SAAW,uBAAuB,UAAY,wBAAwB,iBAAmB,+BAA+B,gBAAkB,8BAA8B,YAAc,0BAA0B,MAAQ,oBAAoB,QAAU,sBAAsB,eAAiB,6BAA6B,MAAQ,oBAAoB,YAAc,4B,+KCAhXC,EAEc,IAFdA,EAII,IAIJC,EACG,CACDC,IAAK,GACLC,IAAK,KAHPF,EAKK,CACHC,IAAK,GACLC,IAAK,KAPPF,EASI,CACFC,IAAK,GACLC,IAAK,K,ECe2BC,aA9BtB,WAAO,IAAD,EACIC,mBAAiB,IADrB,mBACbC,EADa,KACPC,EADO,OAEwBF,oBAAkB,GAF1C,mBAEbG,EAFa,KAEGC,EAFH,KAKpBC,qBAAU,WACN,IAAMC,EAAcC,aAAaC,QAAQ,aAEd,kBAAhBF,GAA4BA,EAAYG,OAAS,EACxDP,EAAQI,GAERJ,EDSK,mLCPV,IAGHG,qBAAU,WACNE,aAAaG,QAAQ,YAAaT,KACnC,CAACA,IAIJ,MAAO,CACHA,OACAC,UACAC,iBACAQ,WANe,kBAAYP,GAAmBD,Q,mBAU/CS,E,KAAaC,E,6DCTLC,EAlBU,WAAO,IAAD,MACeD,IAAlCZ,EADmB,EACnBA,KAAMC,EADa,EACbA,QAASC,EADI,EACJA,eAIjBY,EAAeC,KAAU,mBAAIC,IAAOC,OAAQ,GAAnB,cAA0BD,IAAOE,QAAS,GAA1C,IACzBC,EAAgBJ,KAAU,mBAAIC,IAAOC,OAAQ,GAAnB,cAA0BD,IAAOI,SAAU,GAA3C,IAEhC,OACI,yBAAKC,UAAWL,IAAOM,WACnB,yBAAKD,UAAWL,IAAOO,UACjBrB,GAAkB,8BAAUmB,UAAWP,EAAcU,MAAOxB,EAAMyB,SAR3D,SAACC,GAAD,OAA+CzB,EAAQyB,EAAEC,OAAOH,UASxEtB,GAAkB,kBAAC,IAAD,CAAemB,UAAWF,EAAeS,OAAQ5B,O,iCC2CrE6B,EAvDQ,WAAO,IAAD,MACO9B,oBAAkB,GADzB,mBAClB+B,EADkB,KACRC,EADQ,OAEoBnB,IAArCZ,EAFiB,EAEjBA,KAAME,EAFW,EAEXA,eAAgBQ,EAFL,EAEKA,WAaxBsB,EAAgBjB,KAAU,mBAAIC,IAAOM,WAAY,GAAvB,cAA8BN,IAAOiB,kBAAmB,GAAxD,IAC1BC,EAAenB,KAAU,mBAC1BC,IAAOM,WAAY,GADO,cAE1BN,IAAOmB,iBAAkB,GAFC,cAG1BnB,IAAOoB,YAAcN,GAHK,IAYzBO,EACF,yBAAKhB,UAAWL,IAAOC,OACnB,wBAAII,UAAWL,IAAOsB,SAAtB,OACA,yBAAKjB,UAAWL,IAAOuB,gBACnB,0BAAMC,QAVS,SAACd,GACxBA,EAAEe,iBACF/B,IACAqB,GAAY,IAO+BV,UAlBxB,SAACqB,GAAD,aAA8B3B,KAAU,mBAAIC,IAAO2B,OAAQ,GAAnB,cAA0B3B,IAAO4B,YAAcF,GAA/C,IAkBLG,CAAe3C,IAA7D,WAGA,0BAAMsC,QA/BD,SAACd,GACdA,EAAEe,iBACFK,IAAa9C,EAAM,YA6BcqB,UAAWL,IAAO2B,OAA3C,UAOZ,OACI,oCACI,yBAAKtB,UAAWL,IAAO+B,SAAUP,QAnCtB,SAACd,GAChBA,EAAEe,iBACFV,GAAaD,KAkCL,8BACA,8BACA,+BAEJ,yBAAKT,UAAWW,GAAgBK,GAChC,yBAAKhB,UAAWa,GAAeG,K,iBCtC5BW,EAlBK,SAACC,EAAsBC,GACvC,IAAMC,EAAgBC,mBAEtBhD,qBAAU,WACN+C,EAAcE,QAAUJ,IACzB,CAACA,IAEJ7C,qBAAU,WAIN,GAAc,OAAV8C,EAAgB,CAChB,IAAMI,EAAKC,aAJf,WACIJ,EAAcE,YAGeH,GAC7B,OAAO,kBAAMM,cAAcF,OAEhC,CAACJ,KCfOO,EAFQ,SAAC7D,EAAaC,GAAd,OAAsC6D,KAAKC,MAAMD,KAAKE,UAAY/D,EAAMD,EAAM,GAAKA,ICS3FiE,EANO,iBAAM,CACxBJ,EAAe9D,EAAeE,IAAKF,EAAeC,KAClD6D,EAAe9D,EAAiBC,IAAKD,EAAiBE,KACtD4D,EAAe9D,EAAgBC,IAAKD,EAAgBE,O,iBCqDzCiE,EAjDW,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAmC,EAChBhE,mBAAiBiE,KAAKC,MAAQvE,GADd,mBACrDwE,EADqD,KACrCC,EADqC,OAEVpE,oBAAkB,GAFR,mBAErDqE,EAFqD,KAElCC,EAFkC,OAGpBtE,mBAAmB8D,KAHC,mBAGrDS,EAHqD,KAGvCC,EAHuC,OAI1BxE,mBAAmB8D,KAJO,mBAIrDW,EAJqD,KAI1CC,EAJ0C,KAsC5D,OAhCAzB,GAAY,WACJgB,KAAKC,OAASC,GACdG,GAAqB,GAGrBD,GACAG,GAAgB,SAACG,GAeb,OAdiBA,EAAUC,KAAI,SAACC,EAAeC,GAC3C,IAAIC,EAAYF,EAUhB,OARIA,EAAQJ,EAAUK,KAClBC,EAAYF,EAAQ,GAGpBA,EAAQJ,EAAUK,KAClBC,EAAYF,EAAQ,GAGjBE,QAOfC,IAAQT,EAAcE,KACtBH,GAAqB,GACrBI,EAAaZ,KACbM,EAAkBH,KAAKC,MAAQvE,MAEpCA,GAGC,yBACIsF,MAAO,CACHC,gBAAgB,OAAD,OAASX,EAAaY,OAAtB,OAGnB,yBAAK7D,UAAWL,IAAOC,OAAQ8C,KC1B5BoB,EAnBO,WASlB,OARA/E,qBAAU,WACNgF,IAAQC,KAAK,CACTC,OAAQ,CACJC,SAAU,CAAC,kBAAmB,aAAc,mBAGrD,IAGC,kBAAC5E,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,S,qBChBhB6E,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCLjDnG,EAAOC,QAAU,CAAC,MAAQ,yB,uDCA1BD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,QAAU,wBAAwB,MAAQ,sBAAsB,OAAS,uBAAuB,QAAU,2B","file":"static/js/main.69fb0348.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuIcon\":\"menu_menuIcon__1yZkT\",\"container\":\"menu_container__2VA5R\",\"desktopContainer\":\"menu_desktopContainer__3qM_f\",\"mobileContainer\":\"menu_mobileContainer__24K2J\",\"menuVisible\":\"menu_menuVisible__h-szd\",\"inner\":\"menu_inner__1FTBS\",\"heading\":\"menu_heading__1cBL6\",\"labelContainer\":\"menu_labelContainer__1B15V\",\"label\":\"menu_label__3LtE3\",\"labelActive\":\"menu_labelActive__1QTeO\"};","/* In mili-seconds */\nconst timeRange = {\n    /* Background color change interval */\n    changeInterval: 30000,\n    /* Refresh rate */\n    tick: 250,\n};\n\n/* RGB values */\nconst colorRange = {\n    red: {\n        min: 60,\n        max: 110,\n    },\n    green: {\n        min: 60,\n        max: 120,\n    },\n    blue: {\n        min: 50,\n        max: 160,\n    },\n};\n\n/* Text displayed in the editor when first visting the app */\nconst defaultText = `## Zen\n\nZen is a minimalistic markdown editor aiming to help you _concentrate_ on writing.\nCreate notes and documents without distractions! 👨‍💻`;\n\nexport { timeRange, colorRange, defaultText };\n","import { useState, useEffect } from 'react';\nimport constate from 'constate';\n\nimport { defaultText } from '../configuration';\n\nconst useEditor = () => {\n    const [text, setText] = useState<string>('');\n    const [previewEnabled, setPreviewEnabled] = useState<boolean>(false);\n\n    /* Display default text on first use */\n    useEffect(() => {\n        const storedValue = localStorage.getItem('textValue');\n\n        if (typeof storedValue === 'string' && storedValue.length > 1) {\n            setText(storedValue);\n        } else {\n            setText(defaultText);\n        }\n    }, []);\n\n    /* Prevent loss of progress on accidental tab closing */\n    useEffect(() => {\n        localStorage.setItem('textValue', text);\n    }, [text]);\n\n    const toggleMode = (): void => setPreviewEnabled(!previewEnabled);\n\n    return {\n        text,\n        setText,\n        previewEnabled,\n        toggleMode,\n    };\n};\n\nconst [EditorState, useEditorContext] = constate(useEditor);\n\nexport { EditorState, useEditorContext };\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport classNames from 'classnames';\n\nimport { useEditorContext } from '../../utils/useEditor';\n\nimport styles from './styles/editor.module.css';\n\nconst Editor: React.FC = () => {\n    const { text, setText, previewEnabled } = useEditorContext();\n\n    const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => setText(e.target.value);\n\n    const editorStyles = classNames({ [styles.inner]: true, [styles.editor]: true });\n    const previewStyles = classNames({ [styles.inner]: true, [styles.preview]: true });\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.wrapper}>\n                {!previewEnabled && <textarea className={editorStyles} value={text} onChange={handleChange} />}\n                {previewEnabled && <ReactMarkdown className={previewStyles} source={text} />}\n            </div>\n        </div>\n    );\n};\n\nexport default Editor;\n","import React, { useState } from 'react';\nimport fileDownload from 'js-file-download';\nimport classNames from 'classnames';\n\nimport { useEditorContext } from '../../utils/useEditor';\n\nimport styles from './styles/menu.module.css';\n\nconst Menu: React.FC = () => {\n    const [menuOpen, setMenuOpen] = useState<boolean>(false);\n    const { text, previewEnabled, toggleMode } = useEditorContext();\n\n    const saveFile = (e: React.MouseEvent): void => {\n        e.preventDefault();\n        fileDownload(text, 'file.md');\n    };\n\n    const toggleMenu = (e: React.MouseEvent): void => {\n        e.preventDefault();\n        setMenuOpen(!menuOpen);\n    };\n\n    const getLabelStyles = (enabled: boolean): string => classNames({ [styles.label]: true, [styles.labelActive]: enabled });\n    const desktopStyles = classNames({ [styles.container]: true, [styles.desktopContainer]: true });\n    const mobileStyles = classNames({\n        [styles.container]: true,\n        [styles.mobileContainer]: true,\n        [styles.menuVisible]: menuOpen,\n    });\n\n    const handlePreviewClick = (e: React.MouseEvent): void => {\n        e.preventDefault();\n        toggleMode();\n        setMenuOpen(false);\n    };\n\n    const menuContent = (\n        <div className={styles.inner}>\n            <h1 className={styles.heading}>zen</h1>\n            <div className={styles.labelContainer}>\n                <span onClick={handlePreviewClick} className={getLabelStyles(previewEnabled)}>\n                    Preview\n                </span>\n                <span onClick={saveFile} className={styles.label}>\n                    Save\n                </span>\n            </div>\n        </div>\n    );\n\n    return (\n        <>\n            <div className={styles.menuIcon} onClick={toggleMenu}>\n                <div />\n                <div />\n                <div />\n            </div>\n            <nav className={desktopStyles}>{menuContent}</nav>\n            <nav className={mobileStyles}>{menuContent}</nav>\n        </>\n    );\n};\n\nexport default Menu;\n","import { useEffect, useRef } from 'react';\n\nconst useInterval = (callback: () => void, delay: number): void => {\n    const savedCallback = useRef<any>();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            const id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n};\n\nexport default useInterval;\n","const generateNumber = (min: number, max: number): number => Math.floor(Math.random() * (max - min + 1) + min);\n\nexport default generateNumber;\n","import { colorRange } from '../configuration';\nimport generateNumber from './generateNumber';\n\nconst generateColor = () => [\n    generateNumber(colorRange.red.max, colorRange.red.min),\n    generateNumber(colorRange.green.min, colorRange.green.max),\n    generateNumber(colorRange.blue.min, colorRange.blue.max),\n];\n\nexport default generateColor;\n","import React, { useState } from 'react';\nimport isEqual from 'lodash/isEqual';\n\nimport { timeRange } from '../../configuration';\n\nimport useInterval from '../../utils/useInterval';\nimport generateColor from '../../utils/generateColor';\n\nimport styles from './styles/wrapper.module.css';\n\nconst Wrapper: React.FC = ({ children }: { children?: any }) => {\n    const [nextTransition, setNextTransition] = useState<number>(Date.now() + timeRange.changeInterval);\n    const [transitionPending, setTransitionPending] = useState<boolean>(false);\n    const [currentColor, setCurrentColor] = useState<number[]>(generateColor());\n    const [nextColor, setNextColor] = useState<number[]>(generateColor());\n\n    useInterval(() => {\n        if (Date.now() >= nextTransition) {\n            setTransitionPending(true);\n        }\n\n        if (transitionPending) {\n            setCurrentColor((prevColor: any) => {\n                const newColor = prevColor.map((color: number, index: number) => {\n                    let nextValue = color;\n\n                    if (color > nextColor[index]) {\n                        nextValue = color - 1;\n                    }\n\n                    if (color < nextColor[index]) {\n                        nextValue = color + 1;\n                    }\n\n                    return nextValue;\n                });\n\n                return newColor;\n            });\n        }\n\n        if (isEqual(currentColor, nextColor)) {\n            setTransitionPending(false);\n            setNextColor(generateColor());\n            setNextTransition(Date.now() + timeRange.changeInterval);\n        }\n    }, timeRange.tick);\n\n    return (\n        <div\n            style={{\n                backgroundColor: `rgb(${currentColor.join()})`,\n            }}\n        >\n            <div className={styles.inner}>{children}</div>\n        </div>\n    );\n};\n\nexport default Wrapper;\n","import React, { useEffect } from 'react';\nimport WebFont from 'webfontloader';\n\nimport { EditorState } from './utils/useEditor';\n\nimport Editor from './components/Editor';\nimport Menu from './components/Menu';\nimport Wrapper from './components/Wrapper';\n\nconst App: React.FC = () => {\n    useEffect(() => {\n        WebFont.load({\n            google: {\n                families: ['Roboto Slab:500', 'Roboto:500', 'sans-serif'],\n            },\n        });\n    }, []);\n\n    return (\n        <EditorState>\n            <Wrapper>\n                <Menu />\n                <Editor />\n            </Wrapper>\n        </EditorState>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles'\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"wrapper_inner__2Iog3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"editor_container__uoc15\",\"wrapper\":\"editor_wrapper__3m-X_\",\"inner\":\"editor_inner__1Itor\",\"editor\":\"editor_editor__1N9FM\",\"preview\":\"editor_preview__eWf2T\"};"],"sourceRoot":""}